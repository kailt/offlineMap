<!DOCTYPE html>
<html>

<body>
<input type="file" id="file_sel" multiple onchange="go(this.files)">
<output id="error"></output>
<output id="messeges"></output>
<script>
const dbName = "the_db";
var db;
var layers=[];
var n;
var workers=[];
if (!localStorage["idb_version"])
{
	localStorage["idb_version"]=1;


	var req = indexedDB.deleteDatabase(dbName);
	req.onsuccess = function () {
	    console.log("Deleted database successfully");
	};
	req.onerror = function () {
	    console.log("Couldn't delete database");
	}
	req.onblocked = function () {
	    console.log("Couldn't delete database due to the operation being blocked")
	}
}



  function go(the_files)
  {
  var n_workers=0;
  var num=0;
  var db;
 //var the_files = evt.target.files;
 
 var dbrequest = indexedDB.open(dbName,localStorage["idb_version"]++);
	dbrequest.onerror = function(event) 
	{
		console.log("Problems opening data base: " + event.target.errorCode);
		document.querySelector('#error').textContent ="Problems opening data base: " + event.target.errorCode;
	};
	dbrequest.onblocked = function(event) {
	 console.log("DB is blocked");
		document.querySelector('#error').textContent ="The database is blocked<br>Close the map if it is open";
	};

dbrequest.onupgradeneeded = function(event) {
	 console.log("Ok, lets upgrade");
	 db = event.target.result;

for (var f=0,len=the_files.length;f<len;f++)

{
	var the_name = the_files[f].name.split(".")[0];
	layers.push({"the_name":the_name, "the_file":the_files[f]});
	if(db.objectStoreNames.contains(the_name)) 
		db.deleteObjectStore(the_name);
		
		
	var objectStore = db.createObjectStore(the_name, { keyPath: "gid" });  
		objectStore.transaction.oncomplete=function (e) {		
		console.log("Ok, we are here");
		}
}	
}
  
  	dbrequest.onsuccess = function(event) {
		for (var f=0,len=layers.length;f<len;f++)
		{
			var worker = new Worker('attributes_worker.js');

			worker.onmessage = function(e) {				
			num++;
			if(num==n_workers)
				document.querySelector('#messeges').textContent = [
				'Finnished loading ',e.data.n,' rows'].join('');
				db.close();
			};

			worker.onerror = function(e) {
				document.querySelector('#error').textContent = [
				'ERROR: Line ', e.lineno, ' in ', e.filename, ': ', e.message].join('');
			};
			n_workers++;
			worker.postMessage(layers[f]);
		}
		
	};
  }
   
  </script>
  </body>
  </html>